{"ast":null,"code":"var _jsxFileName = \"/Users/wavestar/Hegemon/src/WebGLBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebGLBackground = () => {\n  _s();\n  const mountRef = useRef(null);\n  const sceneRef = useRef(null);\n  const mouseRef = useRef({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    if (!mountRef.current || sceneRef.current) return;\n    console.log('Initializing WebGL...');\n\n    // Store mount reference\n    const currentMount = mountRef.current;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n\n    // Configure renderer\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0xffffff, 1); // WHITE background\n    renderer.domElement.style.position = 'absolute';\n    renderer.domElement.style.top = '0';\n    renderer.domElement.style.left = '0';\n    renderer.domElement.style.width = '100vw';\n    renderer.domElement.style.height = '100vh';\n    renderer.domElement.style.zIndex = '1';\n    currentMount.appendChild(renderer.domElement);\n    console.log('Canvas added to DOM:', currentMount.contains(renderer.domElement));\n    console.log('Canvas element:', renderer.domElement);\n    console.log('Canvas size:', window.innerWidth, 'x', window.innerHeight);\n\n    // Store scene reference to prevent double initialization\n    sceneRef.current = scene;\n\n    // Create a HUGE test cube to make sure rendering works\n    const testGeometry = new THREE.BoxGeometry(10, 10, 10);\n    const testMaterial = new THREE.MeshPhongMaterial({\n      color: 0xFEFEFC,\n      shininess: 30,\n      specular: 0xFAFAF8\n    });\n    const testCube = new THREE.Mesh(testGeometry, testMaterial);\n    testCube.position.set(0, 0, 0);\n    scene.add(testCube);\n\n    // Create floating spheres (data nodes) - BIGGER and CLOSER\n    const spheres = [];\n    for (let i = 0; i < 10; i++) {\n      const geometry = new THREE.SphereGeometry(3, 32, 32); // Higher resolution for smoothness\n      const material = new THREE.MeshPhongMaterial({\n        color: 0xFFFFFE,\n        shininess: 60,\n        specular: 0xFCFCFB\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      sphere.position.set((Math.random() - 0.5) * 30, (Math.random() - 0.5) * 20, (Math.random() - 0.5) * 15);\n      sphere.userData = {\n        originalX: sphere.position.x,\n        originalY: sphere.position.y,\n        originalZ: sphere.position.z,\n        speed: 0.5 + Math.random() * 1.0,\n        phase: Math.random() * Math.PI * 2\n      };\n      spheres.push(sphere);\n      scene.add(sphere);\n    }\n\n    // Create solid geometric shapes (not wireframe for better 3D effect)\n    const shapes = [];\n    const geometries = [new THREE.OctahedronGeometry(1.5, 1),\n    // Higher detail\n    new THREE.TetrahedronGeometry(2, 1), new THREE.IcosahedronGeometry(1.2, 1)];\n    for (let i = 0; i < 15; i++) {\n      const geometry = geometries[Math.floor(Math.random() * geometries.length)];\n      const material = new THREE.MeshPhongMaterial({\n        color: 0xFFFFFD,\n        shininess: 40,\n        specular: 0xFBFBF9,\n        wireframe: false // Solid shapes for better 3D appearance\n      });\n      const shape = new THREE.Mesh(geometry, material);\n      shape.position.set((Math.random() - 0.5) * 40, (Math.random() - 0.5) * 25, (Math.random() - 0.5) * 25);\n      shape.userData = {\n        originalX: shape.position.x,\n        originalY: shape.position.y,\n        originalZ: shape.position.z,\n        rotationSpeed: new THREE.Vector3((Math.random() - 0.5) * 0.02, (Math.random() - 0.5) * 0.02, (Math.random() - 0.5) * 0.02)\n      };\n      shapes.push(shape);\n      scene.add(shape);\n    }\n\n    // Position camera MUCH closer\n    camera.position.set(0, 0, 30);\n    camera.lookAt(0, 0, 0);\n\n    // Animation\n    let animationId;\n    let time = 0;\n    const animate = () => {\n      animationId = requestAnimationFrame(animate);\n      time += 0.005; // Much slower time progression\n\n      const mouse = mouseRef.current;\n\n      // Slowly rotate test cube with mouse influence\n      testCube.rotation.x += 0.003 + mouse.y * 0.001;\n      testCube.rotation.y += 0.003 + mouse.x * 0.001;\n\n      // Mouse influence on cube position\n      testCube.position.x = mouse.x * 2;\n      testCube.position.y = mouse.y * 2;\n\n      // Animate spheres with mouse interaction\n      spheres.forEach((sphere, index) => {\n        const userData = sphere.userData;\n\n        // Slow floating motion\n        sphere.position.y = userData.originalY + Math.sin(time * userData.speed * 0.3 + userData.phase) * 2;\n\n        // Mouse influence on position\n        sphere.position.x = userData.originalX + mouse.x * (3 + index * 0.5);\n        sphere.position.z = userData.originalZ + mouse.y * (2 + index * 0.3);\n\n        // Slow rotation with mouse influence\n        sphere.rotation.x += 0.002 + mouse.y * 0.001;\n        sphere.rotation.y += 0.003 + mouse.x * 0.001;\n      });\n\n      // Animate shapes with mouse interaction\n      shapes.forEach((shape, index) => {\n        const userData = shape.userData;\n\n        // Much slower rotation\n        shape.rotation.x += userData.rotationSpeed.x * 0.3 + mouse.y * 0.001;\n        shape.rotation.y += userData.rotationSpeed.y * 0.3 + mouse.x * 0.001;\n        shape.rotation.z += userData.rotationSpeed.z * 0.3;\n\n        // Mouse influence on position\n        shape.position.x = userData.originalX + mouse.x * (4 + index * 0.2);\n        shape.position.y = userData.originalY + mouse.y * (3 + index * 0.2);\n      });\n\n      // Gentle camera movement with mouse influence\n      camera.position.x = Math.sin(time * 0.05) * 8 + mouse.x * 3;\n      camera.position.y = Math.cos(time * 0.05) * 4 + mouse.y * 2;\n      camera.lookAt(mouse.x * 2, mouse.y * 2, 0);\n      renderer.render(scene, camera);\n\n      // Debug log every 60 frames\n      if (Math.floor(time * 100) % 60 === 0) {\n        console.log('WebGL rendering... cube rotation:', testCube.rotation.x.toFixed(2));\n      }\n    };\n\n    // Handle mouse movement\n    const handleMouseMove = event => {\n      // Normalize mouse position to -1 to 1 range\n      mouseRef.current.x = event.clientX / window.innerWidth * 2 - 1;\n      mouseRef.current.y = -(event.clientY / window.innerHeight) * 2 + 1;\n    };\n\n    // Handle resize\n    const handleResize = () => {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderer.setSize(width, height);\n    };\n    window.addEventListener('mousemove', handleMouseMove);\n    window.addEventListener('resize', handleResize);\n\n    // Add proper lighting for 3D shading\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.4);\n    scene.add(ambientLight);\n    const directionalLight1 = new THREE.DirectionalLight(0xffffff, 0.8);\n    directionalLight1.position.set(10, 10, 5);\n    scene.add(directionalLight1);\n    const directionalLight2 = new THREE.DirectionalLight(0xffffff, 0.3);\n    directionalLight2.position.set(-10, -10, -5);\n    scene.add(directionalLight2);\n    console.log('Starting WebGL animation...');\n    animate();\n\n    // Cleanup function\n    return () => {\n      console.log('Cleaning up WebGL...');\n      sceneRef.current = null;\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('resize', handleResize);\n      if (animationId) {\n        cancelAnimationFrame(animationId);\n      }\n\n      // Clean up Three.js objects\n      scene.traverse(object => {\n        if (object.geometry) {\n          object.geometry.dispose();\n        }\n        if (object.material) {\n          if (Array.isArray(object.material)) {\n            object.material.forEach(material => material.dispose());\n          } else {\n            object.material.dispose();\n          }\n        }\n      });\n      renderer.dispose();\n\n      // Remove canvas from DOM\n      if (currentMount && currentMount.contains(renderer.domElement)) {\n        currentMount.removeChild(renderer.domElement);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100vw',\n      height: '100vh',\n      zIndex: 1,\n      pointerEvents: 'none'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n_s(WebGLBackground, \"p8ZXT+nDq0ldZObGWHEjRF5ZwDk=\");\n_c = WebGLBackground;\nexport default WebGLBackground;\nvar _c;\n$RefreshReg$(_c, \"WebGLBackground\");","map":{"version":3,"names":["React","useRef","useEffect","THREE","jsxDEV","_jsxDEV","WebGLBackground","_s","mountRef","sceneRef","mouseRef","x","y","current","console","log","currentMount","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","antialias","setSize","setClearColor","domElement","style","position","top","left","width","height","zIndex","appendChild","contains","testGeometry","BoxGeometry","testMaterial","MeshPhongMaterial","color","shininess","specular","testCube","Mesh","set","add","spheres","i","geometry","SphereGeometry","material","sphere","Math","random","userData","originalX","originalY","originalZ","z","speed","phase","PI","push","shapes","geometries","OctahedronGeometry","TetrahedronGeometry","IcosahedronGeometry","floor","length","wireframe","shape","rotationSpeed","Vector3","lookAt","animationId","time","animate","requestAnimationFrame","mouse","rotation","forEach","index","sin","cos","render","toFixed","handleMouseMove","event","clientX","clientY","handleResize","aspect","updateProjectionMatrix","addEventListener","ambientLight","AmbientLight","directionalLight1","DirectionalLight","directionalLight2","removeEventListener","cancelAnimationFrame","traverse","object","dispose","Array","isArray","removeChild","ref","pointerEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/wavestar/Hegemon/src/WebGLBackground.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\n\nconst WebGLBackground = () => {\n  const mountRef = useRef(null);\n  const sceneRef = useRef(null);\n  const mouseRef = useRef({ x: 0, y: 0 });\n\n  useEffect(() => {\n    if (!mountRef.current || sceneRef.current) return;\n    \n    console.log('Initializing WebGL...');\n    \n    // Store mount reference\n    const currentMount = mountRef.current;\n    \n    // Scene setup\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    \n    // Configure renderer\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0xffffff, 1); // WHITE background\n    renderer.domElement.style.position = 'absolute';\n    renderer.domElement.style.top = '0';\n    renderer.domElement.style.left = '0';\n    renderer.domElement.style.width = '100vw';\n    renderer.domElement.style.height = '100vh';\n    renderer.domElement.style.zIndex = '1';\n    currentMount.appendChild(renderer.domElement);\n    \n    console.log('Canvas added to DOM:', currentMount.contains(renderer.domElement));\n    console.log('Canvas element:', renderer.domElement);\n    console.log('Canvas size:', window.innerWidth, 'x', window.innerHeight);\n    \n    // Store scene reference to prevent double initialization\n    sceneRef.current = scene;\n    \n    // Create a HUGE test cube to make sure rendering works\n    const testGeometry = new THREE.BoxGeometry(10, 10, 10);\n    const testMaterial = new THREE.MeshPhongMaterial({ \n      color: 0xFEFEFC,\n      shininess: 30,\n      specular: 0xFAFAF8\n    });\n    const testCube = new THREE.Mesh(testGeometry, testMaterial);\n    testCube.position.set(0, 0, 0);\n    scene.add(testCube);\n    \n              // Create floating spheres (data nodes) - BIGGER and CLOSER\n     const spheres = [];\n     for (let i = 0; i < 10; i++) {\n       const geometry = new THREE.SphereGeometry(3, 32, 32); // Higher resolution for smoothness\n       const material = new THREE.MeshPhongMaterial({\n         color: 0xFFFFFE,\n         shininess: 60,\n         specular: 0xFCFCFB\n       });\n       \n       const sphere = new THREE.Mesh(geometry, material);\n       sphere.position.set(\n         (Math.random() - 0.5) * 30,\n         (Math.random() - 0.5) * 20,\n         (Math.random() - 0.5) * 15\n       );\n      \n             sphere.userData = {\n         originalX: sphere.position.x,\n         originalY: sphere.position.y,\n         originalZ: sphere.position.z,\n         speed: 0.5 + Math.random() * 1.0,\n         phase: Math.random() * Math.PI * 2\n       };\n      \n      spheres.push(sphere);\n      scene.add(sphere);\n    }\n    \n         // Create solid geometric shapes (not wireframe for better 3D effect)\n     const shapes = [];\n     const geometries = [\n       new THREE.OctahedronGeometry(1.5, 1), // Higher detail\n       new THREE.TetrahedronGeometry(2, 1),\n       new THREE.IcosahedronGeometry(1.2, 1)\n     ];\n     \n     for (let i = 0; i < 15; i++) {\n       const geometry = geometries[Math.floor(Math.random() * geometries.length)];\n       const material = new THREE.MeshPhongMaterial({\n         color: 0xFFFFFD,\n         shininess: 40,\n         specular: 0xFBFBF9,\n         wireframe: false // Solid shapes for better 3D appearance\n       });\n      \n      const shape = new THREE.Mesh(geometry, material);\n      shape.position.set(\n        (Math.random() - 0.5) * 40,\n        (Math.random() - 0.5) * 25,\n        (Math.random() - 0.5) * 25\n      );\n      \n             shape.userData = {\n         originalX: shape.position.x,\n         originalY: shape.position.y,\n         originalZ: shape.position.z,\n         rotationSpeed: new THREE.Vector3(\n           (Math.random() - 0.5) * 0.02,\n           (Math.random() - 0.5) * 0.02,\n           (Math.random() - 0.5) * 0.02\n         )\n       };\n      \n      shapes.push(shape);\n      scene.add(shape);\n    }\n    \n         // Position camera MUCH closer\n     camera.position.set(0, 0, 30);\n     camera.lookAt(0, 0, 0);\n    \n         // Animation\n     let animationId;\n     let time = 0;\n     \n     const animate = () => {\n       animationId = requestAnimationFrame(animate);\n       time += 0.005; // Much slower time progression\n       \n       const mouse = mouseRef.current;\n       \n       // Slowly rotate test cube with mouse influence\n       testCube.rotation.x += 0.003 + mouse.y * 0.001;\n       testCube.rotation.y += 0.003 + mouse.x * 0.001;\n       \n       // Mouse influence on cube position\n       testCube.position.x = mouse.x * 2;\n       testCube.position.y = mouse.y * 2;\n       \n       // Animate spheres with mouse interaction\n       spheres.forEach((sphere, index) => {\n         const userData = sphere.userData;\n         \n         // Slow floating motion\n         sphere.position.y = userData.originalY + Math.sin(time * userData.speed * 0.3 + userData.phase) * 2;\n         \n         // Mouse influence on position\n         sphere.position.x = userData.originalX + mouse.x * (3 + index * 0.5);\n         sphere.position.z = userData.originalZ + mouse.y * (2 + index * 0.3);\n         \n         // Slow rotation with mouse influence\n         sphere.rotation.x += 0.002 + mouse.y * 0.001;\n         sphere.rotation.y += 0.003 + mouse.x * 0.001;\n       });\n       \n       // Animate shapes with mouse interaction\n       shapes.forEach((shape, index) => {\n         const userData = shape.userData;\n         \n         // Much slower rotation\n         shape.rotation.x += userData.rotationSpeed.x * 0.3 + mouse.y * 0.001;\n         shape.rotation.y += userData.rotationSpeed.y * 0.3 + mouse.x * 0.001;\n         shape.rotation.z += userData.rotationSpeed.z * 0.3;\n         \n         // Mouse influence on position\n         shape.position.x = userData.originalX + mouse.x * (4 + index * 0.2);\n         shape.position.y = userData.originalY + mouse.y * (3 + index * 0.2);\n       });\n       \n       // Gentle camera movement with mouse influence\n       camera.position.x = Math.sin(time * 0.05) * 8 + mouse.x * 3;\n       camera.position.y = Math.cos(time * 0.05) * 4 + mouse.y * 2;\n       camera.lookAt(mouse.x * 2, mouse.y * 2, 0);\n      \n             renderer.render(scene, camera);\n       \n       // Debug log every 60 frames\n       if (Math.floor(time * 100) % 60 === 0) {\n         console.log('WebGL rendering... cube rotation:', testCube.rotation.x.toFixed(2));\n       }\n     };\n    \n         // Handle mouse movement\n     const handleMouseMove = (event) => {\n       // Normalize mouse position to -1 to 1 range\n       mouseRef.current.x = (event.clientX / window.innerWidth) * 2 - 1;\n       mouseRef.current.y = -(event.clientY / window.innerHeight) * 2 + 1;\n     };\n\n     // Handle resize\n     const handleResize = () => {\n       const width = window.innerWidth;\n       const height = window.innerHeight;\n       \n       camera.aspect = width / height;\n       camera.updateProjectionMatrix();\n       renderer.setSize(width, height);\n     };\n     \n     window.addEventListener('mousemove', handleMouseMove);\n     window.addEventListener('resize', handleResize);\n    \n         // Add proper lighting for 3D shading\n     const ambientLight = new THREE.AmbientLight(0xffffff, 0.4);\n     scene.add(ambientLight);\n\n     const directionalLight1 = new THREE.DirectionalLight(0xffffff, 0.8);\n     directionalLight1.position.set(10, 10, 5);\n     scene.add(directionalLight1);\n\n     const directionalLight2 = new THREE.DirectionalLight(0xffffff, 0.3);\n     directionalLight2.position.set(-10, -10, -5);\n     scene.add(directionalLight2);\n\n     console.log('Starting WebGL animation...');\n     animate();\n    \n         // Cleanup function\n     return () => {\n       console.log('Cleaning up WebGL...');\n       sceneRef.current = null;\n       window.removeEventListener('mousemove', handleMouseMove);\n       window.removeEventListener('resize', handleResize);\n       \n       if (animationId) {\n         cancelAnimationFrame(animationId);\n       }\n       \n       // Clean up Three.js objects\n       scene.traverse((object) => {\n         if (object.geometry) {\n           object.geometry.dispose();\n         }\n         if (object.material) {\n           if (Array.isArray(object.material)) {\n             object.material.forEach(material => material.dispose());\n           } else {\n             object.material.dispose();\n           }\n         }\n       });\n       \n       renderer.dispose();\n       \n       // Remove canvas from DOM\n       if (currentMount && currentMount.contains(renderer.domElement)) {\n         currentMount.removeChild(renderer.domElement);\n       }\n     };\n  }, []);\n\n      return (\n    <div \n      ref={mountRef} \n      style={{ \n        position: 'fixed', \n        top: 0, \n        left: 0, \n        width: '100vw', \n        height: '100vh', \n        zIndex: 1,\n        pointerEvents: 'none'\n      }} \n    />\n  );\n};\n\nexport default WebGLBackground; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}